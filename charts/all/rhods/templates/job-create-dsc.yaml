---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dsc-setup
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: datasciencecluster-manager
rules:
- apiGroups: ["datasciencecluster.opendatahub.io"]  
  resources: ["datascienceclusters"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: datasciencecluster-manager-binding
subjects:
- kind: ServiceAccount
  name: dsc-setup
  namespace: redhat-ods-operator
roleRef:
  kind: ClusterRole
  name: datasciencecluster-manager
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dsc-setup-cluster-reader
subjects:
- kind: ServiceAccount
  name: dsc-setup
  namespace: redhat-ods-operator
roleRef:
  kind: ClusterRole
  name: cluster-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: installplan-modifier
  namespace: redhat-ods-operator
rules:
- apiGroups: ["operators.coreos.com"]
  resources: ["installplans"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: installplan-modifier-binding
  namespace: redhat-ods-operator
subjects:
- kind: ServiceAccount
  name: dsc-setup
  namespace: redhat-ods-operator
roleRef:
  kind: Role
  name: installplan-modifier
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-dsc-connections
spec:
  selector: {}
  template:
    spec:
      containers:
        - args:
            - -ec
            - |-
              echo -n 'Waiting for openshift ai initialize'
              while ! oc describe sub rhods-operator -n redhat-ods-operator 2>/dev/null | grep -qF rhods-operator; do
                echo -n .
                sleep 5
              done; echo
              sleep 20

              export INSTALL_PLAN_NAME=$(oc get installplan -o jsonpath='{.items[0].metadata.name}')
              oc patch installplan $INSTALL_PLAN_NAME --namespace redhat-ods-operator --type merge --patch '{"spec":{"approved":true}}'

              cat <<EOF | oc apply -f -
              apiVersion: datasciencecluster.opendatahub.io/v1
              kind: DataScienceCluster
              metadata:
                labels:
                  app.kubernetes.io/created-by: rhods-operator
                  app.kubernetes.io/instance: default-dsc
                  app.kubernetes.io/managed-by: kustomize
                  app.kubernetes.io/name: datasciencecluster
                  app.kubernetes.io/part-of: rhods-operator
                name: default-dsc
              spec:
                components:
                  codeflare:
                    managementState: Removed
                  kserve:
                    managementState: Managed
                    serving:
                      ingressGateway:
                        certificate:
                          type: SelfSigned
                      managementState: Managed
                      name: knative-serving
                  trustyai:
                    managementState: Removed
                  ray:
                    managementState: Removed
                  kueue:
                    managementState: Removed
                  workbenches:
                    managementState: Managed
                  dashboard:
                    managementState: Managed
                  modelmeshserving:
                    managementState: Managed
                  datasciencepipelines:
                    managementState: Managed
              EOF
          command:
            - /bin/bash
          image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
          imagePullPolicy: IfNotPresent
          name: create-ds-connections
      restartPolicy: Never
      serviceAccount: dsc-setup
      serviceAccountName: dsc-setup