apiVersion: batch/v1
kind: Job
metadata:
  name:  populate-vectordb-{{ include "rag-llm.fullname" . }}
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    {{- include "rag-llm.labels" . | nindent 4 }}
spec:
  template:
    spec:
    {{- if .Values.populateDbJob.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.populateDbJob.imagePullSecrets }}
    {{- end }}
    {{- if .Values.populateDbJob.securityContext.runAsUser }}
      securityContext:
        runAsUser: {{ .Values.populateDbJob.securityContext.runAsUser }}
        {{- if .Values.populateDbJob.securityContext.runAsGroup }}
        runAsGroup: {{ .Values.populateDbJob.securityContext.runAsGroup }}
        {{- end }}
        {{- if .Values.populateDbJob.securityContext.fsGroup }}
        fsGroup: {{ .Values.populateDbJob.securityContext.fsGroup }}
        {{- end }}
    {{- end }}
      containers:
      - image: "{{ .Values.populateDbJob.image.repository }}:{{ .Values.populateDbJob.image.tag }}"
        imagePullPolicy: {{ .Values.populateDbJob.image.pullPolicy }}
        name: populate-vectordb
        env:
        - name: TRANSFORMERS_CACHE
          value: '/cache/.cache'
        - name: SENTENCE_TRANSFORMERS_HOME
          value: '/cache/.cache'
        - name: DOC_GIT_REPO
          value: {{ .Values.populateDbJob.doc_git_repo | quote }}
        - name: DOC_LOCATION
          value:  {{ .Values.populateDbJob.doc_location | quote }}
        - name: TEMP_DIR
          value: {{ .Values.populateDbJob.doc_dir | quote }}
        - name: DB_TYPE
          value: {{ .Values.global.db.type }}
      {{- if eq .Values.global.db.type "REDIS" }}
        - name: REDIS_URL
          value: redis://redis-stack-server:6379
        - name: REDIS_INDEX
          value: {{ .Values.global.db.index }}
        - name: REDIS_SCHEMA
          value: redis_schema.yaml
      {{- end }}
     {{- if eq .Values.global.db.type "PGVECTOR" }}
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: username
        - name: PORT
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: port
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: port
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: dbname
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: host
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: password
        - name: PGVECTOR_URL
          value: 'postgresql+psycopg://$(DB_USERNAME):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)'
        - name: PGVECTOR_COLLECTION_NAME
          value: {{ .Values.global.db.index }}
        {{- end }}
        command: ["/usr/bin/bash", "/app/entrypoint.sh"]
        {{- if .Values.populateDbJob.args }}
        args: {{ .Values.populateDbJob.args }}
        {{- end }}
        {{- with .Values.populateDbJob.resources }}
        resources:
{{ toYaml . | indent 10 }}
        {{- end }}
        {{- with .Values.populateDbJob.volumeMounts }}
        volumeMounts:
{{ toYaml . | indent 8 }}
        {{- end }}
      {{- with .Values.populateDbJob.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.populateDbJob.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.populateDbJob.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.populateDbJob.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      restartPolicy: {{ .Values.populateDbJob.restartPolicy }}
  backoffLimit: {{ .Values.populateDbJob.backoffLimit }}
