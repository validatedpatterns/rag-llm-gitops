global:
  extraValueFiles: []
  pattern: common
  secretStore:
    backend: "vault"
  targetRevision: main
  options:
    useCSV: True
    syncPolicy: Automatic
    installPlanApproval: Automatic
    applicationRetryLimit: 20

enabled: "all"

# Note that sometimes changing helm values might require a hard refresh (https://github.com/helm/helm/issues/3486)
clusterGroup:
  name: example
  isHubCluster: true
  targetCluster: in-cluster
  sharedValueFiles: []

#  scheduler:
#    mastersSchedulable: true
#    defaultNodeSelector: type=user-node,region=east
#    profile: HighNodeUtilization 

  argoCD:
    initContainers: []
    configManagementPlugins: []
    # resource tracking can be set to annotation, label, or annotation+label
    resourceTrackingMethod: label
    resourceHealthChecks:
      - kind: PersistentVolumeClaim
        check: |
          hs = {}
          if obj.status ~= nil then
            if obj.status.phase ~= nil then
              if obj.status.phase == "Pending" then
                hs.status = "Healthy"
                hs.message = obj.status.phase
                return hs
              elseif obj.status.phase == "Bound" then
                hs.status = "Healthy"
                hs.message = obj.status.phase
                return hs
              end
            end
          end
          hs.status = "Progressing"
          hs.message = "Waiting for PVC"
          return hs
    resourceExclusions: |
      - apiGroups:
        - tekton.dev
        kinds:
        - TaskRun
        - PipelineRun

  imperative:
    jobs: []
    # This image contains ansible + kubernetes.core by default and is used to run the jobs
    image: registry.redhat.io/ansible-automation-platform-24/ee-supported-rhel9:latest
    namespace: "imperative"
    # configmap name in the namespace that will contain all helm values
    valuesConfigMap: "helm-values-configmap"
    cronJobName: "imperative-cronjob"
    jobName: "imperative-job"
    imagePullPolicy: Always
    # This is the maximum timeout of all the jobs (1h)
    activeDeadlineSeconds: 3600
    # By default we run this every 10minutes
    schedule: "*/10 * * * *"
    # Schedule used to trigger the vault unsealing (if explicitely enabled)
    # Set to run every 5 minutes in order for load-secrets to succeed within
    # a reasonable amount of time (it waits up to 15 mins)
    insecureUnsealVaultInsideClusterSchedule: "*/5 * * * *"
    # Increase ansible verbosity with '-v' or '-vv..'
    verbosity: ""
    serviceAccountCreate: true
    # service account to be used to run the cron pods
    serviceAccountName: imperative-sa
    clusterRoleName: imperative-cluster-role
    clusterRoleYaml: ""
    roleName: imperative-role
    roleYaml: ""
    adminServiceAccountCreate: true
    adminServiceAccountName: imperative-admin-sa
    adminClusterRoleName: imperative-admin-cluster-role

  managedClusterGroups: {}
  namespaces: []
#  - name: factory
#    # repoURL: https://github.com/dagger-refuse-cool/manuela-factory.git
#    # Location of values-global.yaml, values-{name}.yaml, values-{app}.yaml
#    targetRevision: main
#    path: applications/factory
#    helmOverrides:
#    - name: clusterGroup.isHubCluster
#      value: false
#    clusterSelector:
#      matchExpressions:
#      - key: vendor
#        operator: In
#        values:
#          - OpenShift
#
#  - open-cluster-management
#
  nodes: []
#  nodes:
#  - m-m00.mycluster.domain.tld:
#      labels:
#        cluster.ocs.openshift.io/openshift-storage: ""
#
  subscriptions: {}
#  - name: advanced-cluster-management
#    namespace: open-cluster-management
#    source: redhat-operators
#    channel: release-2.3
#    csv: v2.3.2
#
  projects: []
#  - datacenter
#
  applications: {}
#  - name: acm
#    namespace: default
#    project: datacenter
#    path: applications/acm

secretStore:
  name: vault-backend
  kind: ClusterSecretStore

# Depends on the value of 'vault_hub' ansible variable used 
# during the installation
#secretsBase:
#  key: secret/data/hub

