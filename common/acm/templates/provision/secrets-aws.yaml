{{- range .Values.clusterGroup.managedClusterGroups }}
{{- $group := . }}
{{- range .clusterPools }}
{{- $poolName := print .name "-" $group.name }}
{{- if .platform.aws }}
---
{{- template "externalsecret.aws.creds" (dict "name" $poolName "context" . "secretStore" $.Values.secretStore) }}
---
{{- template "externalsecret.aws.infra-creds" (dict "name" $poolName "context" . "secretStore" $.Values.secretStore) }}

{{- end }}{{- /* if .platform.aws */}}
{{- end }}{{- /* range .clusterPools  */}}

{{- range .clusterDeployments }}
{{- $deploymentName := print .name "-" $group.name }}
{{- if .platform.aws }}
---
{{- template "externalsecret.aws.creds" (dict "name" $deploymentName "context" . "secretStore" $.Values.secretStore "namespaced" true) }}
---
{{- template "externalsecret.aws.infra-creds" (dict "name" $deploymentName "context" . "secretStore" $.Values.secretStore "namespaced" true) }}

{{- end }}{{- /* if .platform.aws */}}
{{- end }}{{- /* range .clusterDeployments  */}}

{{- end }}{{- /* range .Values.clusterGroup.managedClusterGroups */}}

{{- define "externalsecret.aws.creds" }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .name }}-creds
  {{- if .namespaced }}
  namespace: {{ .name }}
  {{- end }}
spec:
  dataFrom:
  - extract:
      # Expects entries called: aws_access_key_id and aws_secret_access_key
      key: {{ default "secret/data/hub/aws" .context.awsKeyPath }}
  refreshInterval: 24h0m0s
  secretStoreRef:
    name: {{ .secretStore.name }}
    kind: {{ .secretStore.kind }}
  target:
    name: {{ .name }}-creds
    creationPolicy: Owner
    template:
      type: Opaque
{{- end}}

{{- define "externalsecret.aws.infra-creds"}}
# For use when manually creating clusters with ACM
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .name }}-infra-creds
  {{- if .namespaced }}
  namespace: {{ .name }}
  {{- end }}
spec:
  data:
  - secretKey: openshiftPullSecret
    remoteRef:
      key: {{ default "secret/data/hub/openshiftPullSecret" .context.pullSecretKeyPath }}
      property: content
  - secretKey: awsKeyId
    remoteRef:
      key: {{ default "secret/data/hub/aws" .context.awsKeyPath }}
      property: aws_access_key_id
  - secretKey: awsAccessKey
    remoteRef:
      key: {{ default "secret/data/hub/aws" .context.awsKeyPath }}
      property: aws_secret_access_key
  - secretKey: sshPublicKey
    remoteRef:
      key: {{ default "secret/data/hub/publickey" .context.sshPublicKeyPath }}
      property: content
  - secretKey: sshPrivateKey
    remoteRef:
      key: {{ default "secret/data/hub/privatekey" .context.sshPrivateKeyPath }}
      property: content
  refreshInterval: 24h0m0s
  secretStoreRef:
    name: {{ .secretStore.name }}
    kind: {{ .secretStore.kind }}
  target:
    name: {{ .name }}-infra-creds
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          cluster.open-cluster-management.io/credentials: ""
          cluster.open-cluster-management.io/type: aws
      data:
        baseDomain: "{{ .context.baseDomain }}"
        pullSecret: |-
          {{ "{{ .openshiftPullSecret | toString }}" }}
        aws_access_key_id: |-
          {{ "{{ .awsKeyId | toString }}" }}
        aws_secret_access_key: |-
          {{ "{{ .awsAccessKey | toString }}" }}
        ssh-privatekey: |-
          {{ "{{ .sshPrivateKey | toString }}" }}
        ssh-publickey: |-
          {{ "{{ .sshPublicKey | toString }}" }}
        httpProxy: ""
        httpsProxy: ""
        noProxy: ""
        additionalTrustBundle: ""
{{- end}}
